"use strict";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const _ommon=require("./сommon-B5OyIkqW.cjs"),React=require("react");require("react-dom");var isCheckBoxInput=__name(element=>element.type==="checkbox","isCheckBoxInput"),isDateObject=__name(value=>value instanceof Date,"isDateObject"),isNullOrUndefined=__name(value=>value==null,"isNullOrUndefined");const isObjectType=__name(value=>typeof value=="object","isObjectType");var isObject=__name(value=>!isNullOrUndefined(value)&&!Array.isArray(value)&&isObjectType(value)&&!isDateObject(value),"isObject"),getEventValue=__name(event=>isObject(event)&&event.target?isCheckBoxInput(event.target)?event.target.checked:event.target.value:event,"getEventValue"),getNodeParentName=__name(name=>name.substring(0,name.search(/\.\d+(\.|$)/))||name,"getNodeParentName"),isNameInFieldArray=__name((names,name)=>names.has(getNodeParentName(name)),"isNameInFieldArray"),isPlainObject=__name(tempObject=>{const prototypeCopy=tempObject.constructor&&tempObject.constructor.prototype;return isObject(prototypeCopy)&&prototypeCopy.hasOwnProperty("isPrototypeOf")},"isPlainObject"),isWeb=typeof window<"u"&&typeof window.HTMLElement<"u"&&typeof document<"u";function cloneObject(data){let copy;const isArray=Array.isArray(data),isFileListInstance=typeof FileList<"u"?data instanceof FileList:!1;if(data instanceof Date)copy=new Date(data);else if(data instanceof Set)copy=new Set(data);else if(!(isWeb&&(data instanceof Blob||isFileListInstance))&&(isArray||isObject(data)))if(copy=isArray?[]:{},!isArray&&!isPlainObject(data))copy=data;else for(const key in data)data.hasOwnProperty(key)&&(copy[key]=cloneObject(data[key]));else return data;return copy}__name(cloneObject,"cloneObject");var compact=__name(value=>Array.isArray(value)?value.filter(Boolean):[],"compact"),isUndefined=__name(val=>val===void 0,"isUndefined"),get=__name((object,path,defaultValue)=>{if(!path||!isObject(object))return defaultValue;const result=compact(path.split(/[,[\].]+?/)).reduce((result2,key)=>isNullOrUndefined(result2)?result2:result2[key],object);return isUndefined(result)||result===object?isUndefined(object[path])?defaultValue:object[path]:result},"get"),isBoolean=__name(value=>typeof value=="boolean","isBoolean"),isKey=__name(value=>/^\w*$/.test(value),"isKey"),stringToPath=__name(input=>compact(input.replace(/["|']|\]/g,"").split(/\.|\[/)),"stringToPath"),set=__name((object,path,value)=>{let index=-1;const tempPath=isKey(path)?[path]:stringToPath(path),length=tempPath.length,lastIndex=length-1;for(;++index<length;){const key=tempPath[index];let newValue=value;if(index!==lastIndex){const objValue=object[key];newValue=isObject(objValue)||Array.isArray(objValue)?objValue:isNaN(+tempPath[index+1])?{}:[]}if(key==="__proto__"||key==="constructor"||key==="prototype")return;object[key]=newValue,object=object[key]}return object},"set");const EVENTS={BLUR:"blur",CHANGE:"change"},VALIDATION_MODE={all:"all"},HookFormContext=React.createContext(null),useFormContext=__name(()=>React.useContext(HookFormContext),"useFormContext");var getProxyFormState=__name((formState,control,localProxyFormState,isRoot=!0)=>{const result={defaultValues:control._defaultValues};for(const key in formState)Object.defineProperty(result,key,{get:__name(()=>{const _key=key;return control._proxyFormState[_key]!==VALIDATION_MODE.all&&(control._proxyFormState[_key]=!isRoot||VALIDATION_MODE.all),localProxyFormState&&(localProxyFormState[_key]=!0),formState[_key]},"get")});return result},"getProxyFormState"),isEmptyObject=__name(value=>isObject(value)&&!Object.keys(value).length,"isEmptyObject"),shouldRenderFormState=__name((formStateData,_proxyFormState,updateFormState,isRoot)=>{updateFormState(formStateData);const{name,...formState}=formStateData;return isEmptyObject(formState)||Object.keys(formState).length>=Object.keys(_proxyFormState).length||Object.keys(formState).find(key=>_proxyFormState[key]===!0)},"shouldRenderFormState"),convertToArrayPayload=__name(value=>Array.isArray(value)?value:[value],"convertToArrayPayload"),shouldSubscribeByName=__name((name,signalName,exact)=>!name||!signalName||name===signalName||convertToArrayPayload(name).some(currentName=>currentName&&(exact?currentName===signalName:currentName.startsWith(signalName)||signalName.startsWith(currentName))),"shouldSubscribeByName");function useSubscribe(props){const _props=React.useRef(props);_props.current=props,React.useEffect(()=>{const subscription=!props.disabled&&_props.current.subject&&_props.current.subject.subscribe({next:_props.current.next});return()=>{subscription&&subscription.unsubscribe()}},[props.disabled])}__name(useSubscribe,"useSubscribe");function useFormState(props){const methods=useFormContext(),{control=methods.control,disabled,name,exact}=props||{},[formState,updateFormState]=React.useState(control._formState),_mounted=React.useRef(!0),_localProxyFormState=React.useRef({isDirty:!1,isLoading:!1,dirtyFields:!1,touchedFields:!1,validatingFields:!1,isValidating:!1,isValid:!1,errors:!1}),_name=React.useRef(name);return _name.current=name,useSubscribe({disabled,next:__name(value=>_mounted.current&&shouldSubscribeByName(_name.current,value.name,exact)&&shouldRenderFormState(value,_localProxyFormState.current,control._updateFormState)&&updateFormState({...control._formState,...value}),"next"),subject:control._subjects.state}),React.useEffect(()=>(_mounted.current=!0,_localProxyFormState.current.isValid&&control._updateValid(!0),()=>{_mounted.current=!1}),[control]),React.useMemo(()=>getProxyFormState(formState,control,_localProxyFormState.current,!1),[formState,control])}__name(useFormState,"useFormState");var isString=__name(value=>typeof value=="string","isString"),generateWatchOutput=__name((names,_names,formValues,isGlobal,defaultValue)=>isString(names)?get(formValues,names,defaultValue):Array.isArray(names)?names.map(fieldName=>get(formValues,fieldName)):formValues,"generateWatchOutput");function useWatch(props){const methods=useFormContext(),{control=methods.control,name,defaultValue,disabled,exact}=props||{},_name=React.useRef(name);_name.current=name,useSubscribe({disabled,subject:control._subjects.values,next:__name(formState=>{shouldSubscribeByName(_name.current,formState.name,exact)&&updateValue(cloneObject(generateWatchOutput(_name.current,control._names,formState.values||control._formValues,!1,defaultValue)))},"next")});const[value,updateValue]=React.useState(control._getWatch(name,defaultValue));return React.useEffect(()=>control._removeUnmounted()),value}__name(useWatch,"useWatch");function useController(props){const methods=useFormContext(),{name,disabled,control=methods.control,shouldUnregister}=props,isArrayField=isNameInFieldArray(control._names.array,name),value=useWatch({control,name,defaultValue:get(control._formValues,name,get(control._defaultValues,name,props.defaultValue)),exact:!0}),formState=useFormState({control,name,exact:!0}),_registerProps=React.useRef(control.register(name,{...props.rules,value,...isBoolean(props.disabled)?{disabled:props.disabled}:{}})),fieldState=React.useMemo(()=>Object.defineProperties({},{invalid:{enumerable:!0,get:__name(()=>!!get(formState.errors,name),"get")},isDirty:{enumerable:!0,get:__name(()=>!!get(formState.dirtyFields,name),"get")},isTouched:{enumerable:!0,get:__name(()=>!!get(formState.touchedFields,name),"get")},isValidating:{enumerable:!0,get:__name(()=>!!get(formState.validatingFields,name),"get")},error:{enumerable:!0,get:__name(()=>get(formState.errors,name),"get")}}),[formState,name]),field=React.useMemo(()=>({name,value,...isBoolean(disabled)||formState.disabled?{disabled:formState.disabled||disabled}:{},onChange:__name(event=>_registerProps.current.onChange({target:{value:getEventValue(event),name},type:EVENTS.CHANGE}),"onChange"),onBlur:__name(()=>_registerProps.current.onBlur({target:{value:get(control._formValues,name),name},type:EVENTS.BLUR}),"onBlur"),ref:__name(elm=>{const field2=get(control._fields,name);field2&&elm&&(field2._f.ref={focus:__name(()=>elm.focus(),"focus"),select:__name(()=>elm.select(),"select"),setCustomValidity:__name(message=>elm.setCustomValidity(message),"setCustomValidity"),reportValidity:__name(()=>elm.reportValidity(),"reportValidity")})},"ref")}),[name,control._formValues,disabled,formState.disabled,value,control._fields]);return React.useEffect(()=>{const _shouldUnregisterField=control._options.shouldUnregister||shouldUnregister,updateMounted=__name((name2,value2)=>{const field2=get(control._fields,name2);field2&&field2._f&&(field2._f.mount=value2)},"updateMounted");if(updateMounted(name,!0),_shouldUnregisterField){const value2=cloneObject(get(control._options.defaultValues,name));set(control._defaultValues,name,value2),isUndefined(get(control._formValues,name))&&set(control._formValues,name,value2)}return!isArrayField&&control.register(name),()=>{(isArrayField?_shouldUnregisterField&&!control._state.action:_shouldUnregisterField)?control.unregister(name):updateMounted(name,!1)}},[name,control,isArrayField,shouldUnregister]),React.useEffect(()=>{control._updateDisabledField({disabled,fields:control._fields,name})},[disabled,name,control]),React.useMemo(()=>({field,formState,fieldState}),[field,formState,fieldState])}__name(useController,"useController");const CheckboxField=__name(({className,children=null,control,defaultValue,fieldName,isRequired,label="",onChange,rules,shouldUnregister,style,tooltip,...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name(e=>{const value=e.target.checked;field.onChange(value),onChange==null||onChange(value)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,style:{...style,userSelect:"none"},tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.Checkbox$1,{...rest,isChecked:field.value,onChange:handleChange,value:field.value,children})})},"CheckboxField"),defaultFormatter=_ommon.dayjs,defaultParser=__name(date=>(date==null?void 0:date.toISOString())??"","defaultParser"),DatePickerField=__name(({className,control,defaultValue,fieldName,formatter=defaultFormatter,isHorizontal,isReadonly,isRequired,label="",onChange:propsOnChange,parser=defaultParser,readonlyFormatter,rules,shouldUnregister,tooltip,...rest})=>{var _a,_b;const{field:{onChange,value,...restField},fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((date,dateString)=>{const onlyString=dateString,parsed=parser(date,onlyString);onChange(parsed),propsOnChange==null||propsOnChange(date,onlyString)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",tooltip,children:isReadonly?(readonlyFormatter==null?void 0:readonlyFormatter(value))??((_b=value==null?void 0:value.toLocalDateString)==null?void 0:_b.call(value))??value:_ommon.jsxRuntimeExports.jsx(_ommon.DatePicker,{...rest,...restField,onChange:handleChange,status:fieldState.invalid?"error":void 0,value:value&&formatter(value)})})},"DatePickerField"),InputField=__name(({className,control,defaultValue,fieldName,isHorizontal,isNumberInputClearable=!0,isRequired,label="",onChange,onPressEnter,rules,shouldUnregister,style,tooltip,type="text",...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name(e=>{let value=e.target.value;isNumberInputClearable||value===""&&(value="0"),field.onChange(value),onChange==null||onChange(value)},"handleChange"),handleKeyDown=__name(e=>{e.key==="Enter"&&onPressEnter&&onPressEnter(e)},"handleKeyDown");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",style,tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.Input$1,{...rest,...field,onChange:handleChange,onPressEnter:handleKeyDown,status:fieldState.invalid?"error":"",type,value:field.value??""})})},"InputField"),InputNumberField=__name(({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rules,shouldUnregister,style,tooltip,...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name(value=>{field.onChange(value),onChange==null||onChange(value)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",style,tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.InputNumber,{...rest,...field,onChange:handleChange,status:fieldState.invalid?"error":"",value:field.value??null})})},"InputNumberField"),MaskedInputField=__name(({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rules,shouldUnregister,style,tooltip,type="text",...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((_e,maskedValue)=>{field.onChange(maskedValue),onChange==null||onChange(maskedValue)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",style,tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.MaskedInput,{...rest,...field,onChange:handleChange,status:fieldState.invalid?"error":"",type,value:field.value??""})})},"MaskedInputField"),MultipleSelectField=__name(({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rules,shouldUnregister,tooltip,...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((value,options)=>{field.onChange(value),onChange==null||onChange(value,options)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.MultipleSelect,{...rest,...field,onChange:handleChange,status:fieldState.invalid?"error":void 0,style:{width:"100%"}})})},"MultipleSelectField");function RangePickerField({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rules,shouldUnregister,tooltip,...rest}){var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((_date,dateString)=>{field.onChange(dateString),onChange==null||onChange(dateString)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.RangePicker,{...rest,...field,onChange:handleChange,status:fieldState.invalid?"error":void 0,value:void 0})})}__name(RangePickerField,"RangePickerField");const DEFAULT_READONLY_STUB="-",SelectField=__name(({className,control,defaultValue,fieldName,isHorizontal,isReadonly,isRequired,label="",onChange:propsOnChange,options,rules,shouldUnregister,tooltip,...rest})=>{var _a,_b;const{field:{onChange,value,...restField},fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((value2,option)=>{onChange(value2),propsOnChange==null||propsOnChange(value2,option)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",tooltip,children:isReadonly?value?((_b=options==null?void 0:options.find(el=>el.value===value))==null?void 0:_b.label)??DEFAULT_READONLY_STUB:DEFAULT_READONLY_STUB:_ommon.jsxRuntimeExports.jsx(_ommon.Select$1,{...rest,...restField,onChange:handleChange,options,status:fieldState.invalid?"error":void 0,style:{width:"100%"},value})})},"SelectField"),TextAreaField=__name(({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rows=4,rules,shouldUnregister,style,tooltip,...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name(e=>{const value=e.target.value;field.onChange(value),onChange==null||onChange(value)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,label,layout:isHorizontal?"horizontal":"vertical",isRequired:isRequired||!!(rules!=null&&rules.required),style,tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.TextArea,{...rest,...field,onChange:handleChange,rows,status:fieldState.invalid?"error":"",value:field.value??""})})},"TextAreaField"),TimePickerField=__name(({className,control,defaultValue,fieldName,isHorizontal,isRequired,label="",onChange,rules,shouldUnregister,tooltip,...rest})=>{var _a;const{field,fieldState}=useController({control,defaultValue,name:fieldName,rules,shouldUnregister}),handleChange=__name((_date,dateString)=>{field.onChange(dateString),onChange==null||onChange(dateString)},"handleChange");return _ommon.jsxRuntimeExports.jsx(_ommon.FormItem,{className,help:(_a=fieldState.error)==null?void 0:_a.message,isRequired:isRequired||!!(rules!=null&&rules.required),label,layout:isHorizontal?"horizontal":"vertical",tooltip,children:_ommon.jsxRuntimeExports.jsx(_ommon.TimePicker,{...rest,...field,onChange:handleChange,status:fieldState.invalid?"error":void 0,value:void 0})})},"TimePickerField");exports.CheckboxField=CheckboxField;exports.ControllerCheckbox=CheckboxField;exports.ControllerTextArea=TextAreaField;exports.DatePickerField=DatePickerField;exports.InputField=InputField;exports.InputNumberField=InputNumberField;exports.MaskedInputField=MaskedInputField;exports.MultipleSelectField=MultipleSelectField;exports.RangePickerField=RangePickerField;exports.SelectField=SelectField;exports.TextAreaField=TextAreaField;exports.TimePickerField=TimePickerField;
