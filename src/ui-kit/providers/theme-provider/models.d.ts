import { ThemeConfig } from 'antd';
export type TExtendedThemeConfig = {
    components?: Partial<ThemeConfig['components']> & {
        Input?: {
            labelFontSize: number;
            labelColor: string;
            labelLineHeight: number;
            labelHeight: number;
        };
        Badge?: {
            dangerIndicatorBg: string;
            dangerTextColor: string;
            defaultIndicatorBg: string;
            defaultTextColor: string;
            primaryIndicatorBg: string;
            primaryTextColor: string;
        };
        Breadcrumb?: {
            fontSizeIcon: number;
        };
        Button?: {
            dashedBg: string;
            dashedBorderColor: string;
            dashedColor: string;
            dashedDangerBg: string;
            dashedDangerBorderColor: string;
            dashedDangerColor: string;
            dashedDangerDisabledBg: string;
            dashedDangerDisabledBorderColor: string;
            dashedDangerDisabledColor: string;
            dashedDangerFocusedBg: string;
            dashedDangerFocusedBorderColor: string;
            dashedDangerFocusedColor: string;
            dashedDangerHoverBg: string;
            dashedDangerHoverBorderColor: string;
            dashedDangerHoverColor: string;
            dashedDangerPressedBg: string;
            dashedDangerPressedBorderColor: string;
            dashedDangerPressedColor: string;
            dashedDisabledBg: string;
            dashedDisabledBorderColor: string;
            dashedDisabledColor: string;
            dashedFocusedBg: string;
            dashedFocusedBorderColor: string;
            dashedFocusedColor: string;
            dashedGhostBg: string;
            dashedGhostBorderColor: string;
            dashedGhostColor: string;
            dashedGhostDangerBg: string;
            dashedGhostDangerBorderColor: string;
            dashedGhostDangerColor: string;
            dashedGhostDangerDisabledBg: string;
            dashedGhostDangerDisabledBorderColor: string;
            dashedGhostDangerDisabledColor: string;
            dashedGhostDangerFocusedBg: string;
            dashedGhostDangerFocusedBorderColor: string;
            dashedGhostDangerFocusedColor: string;
            dashedGhostDangerHoverBg: string;
            dashedGhostDangerHoverBorderColor: string;
            dashedGhostDangerHoverColor: string;
            dashedGhostDangerPressedBg: string;
            dashedGhostDangerPressedBorderColor: string;
            dashedGhostDangerPressedColor: string;
            dashedGhostDisabledBg: string;
            dashedGhostDisabledBorderColor: string;
            dashedGhostDisabledColor: string;
            dashedGhostFocusedBg: string;
            dashedGhostFocusedBorderColor: string;
            dashedGhostFocusedColor: string;
            dashedGhostHoverBg: string;
            dashedGhostHoverBorderColor: string;
            dashedGhostHoverColor: string;
            dashedGhostPressedBg: string;
            dashedGhostPressedBorderColor: string;
            dashedGhostPressedColor: string;
            dashedHoverBg: string;
            dashedHoverBorderColor: string;
            dashedHoverColor: string;
            dashedPressedBg: string;
            dashedPressedBorderColor: string;
            dashedPressedColor: string;
            defaultDangerBg: string;
            defaultDangerBorderColor: string;
            defaultDangerColor: string;
            defaultDangerDisabledBg: string;
            defaultDangerDisabledBorderColor: string;
            defaultDangerDisabledColor: string;
            defaultDangerFocusedBg: string;
            defaultDangerFocusedBorderColor: string;
            defaultDangerFocusedColor: string;
            defaultDangerHoverBg: string;
            defaultDangerHoverBorderColor: string;
            defaultDangerHoverColor: string;
            defaultDangerPressedBg: string;
            defaultDangerPressedBorderColor: string;
            defaultDangerPressedColor: string;
            defaultDisabledBg: string;
            defaultDisabledBorderColor: string;
            defaultDisabledColor: string;
            defaultFocusedBg: string;
            defaultFocusedBorderColor: string;
            defaultFocusedColor: string;
            defaultGhostBg: string;
            defaultGhostDangerBg: string;
            defaultGhostDangerBorderColor: string;
            defaultGhostDangerColor: string;
            defaultGhostDangerDisabledBg: string;
            defaultGhostDangerDisabledBorderColor: string;
            defaultGhostDangerDisabledColor: string;
            defaultGhostDangerFocusedBg: string;
            defaultGhostDangerFocusedBorderColor: string;
            defaultGhostDangerFocusedColor: string;
            defaultGhostDangerHoverBg: string;
            defaultGhostDangerHoverBorderColor: string;
            defaultGhostDangerHoverColor: string;
            defaultGhostDangerPressedBg: string;
            defaultGhostDangerPressedBorderColor: string;
            defaultGhostDangerPressedColor: string;
            defaultGhostDisabledBg: string;
            defaultGhostDisabledBorderColor: string;
            defaultGhostDisabledColor: string;
            defaultGhostFocusedBg: string;
            defaultGhostFocusedBorderColor: string;
            defaultGhostFocusedColor: string;
            defaultGhostHoverBg: string;
            defaultGhostHoverBorderColor: string;
            defaultGhostHoverColor: string;
            defaultGhostPressedBg: string;
            defaultGhostPressedBorderColor: string;
            defaultGhostPressedColor: string;
            defaultPressedBg: string;
            defaultPressedBorderColor: string;
            defaultPressedColor: string;
            iconDashedColor: string;
            iconDashedDangerColor: string;
            iconDashedDangerDisabledColor: string;
            iconDashedDangerFocusedColor: string;
            iconDashedDangerHoverColor: string;
            iconDashedDangerPressedColor: string;
            iconDashedDisabledColor: string;
            iconDashedFocusedColor: string;
            iconDashedGhostColor: string;
            iconDashedGhostDangerColor: string;
            iconDashedGhostDangerDisabledColor: string;
            iconDashedGhostDangerFocusedColor: string;
            iconDashedGhostDangerHoverColor: string;
            iconDashedGhostDangerPressedColor: string;
            iconDashedGhostDisabledColor: string;
            iconDashedGhostFocusedColor: string;
            iconDashedGhostHoverColor: string;
            iconDashedGhostPressedColor: string;
            iconDashedHoverColor: string;
            iconDashedPressedColor: string;
            iconDefaultColor: string;
            iconDefaultDangerColor: string;
            iconDefaultDangerDisabledColor: string;
            iconDefaultDangerFocusedColor: string;
            iconDefaultDangerHoverColor: string;
            iconDefaultDangerPressedColor: string;
            iconDefaultDisabledColor: string;
            iconDefaultFocusedColor: string;
            iconDefaultGhostColor: string;
            iconDefaultGhostDangerColor: string;
            iconDefaultGhostDangerDisabledColor: string;
            iconDefaultGhostDangerFocusedColor: string;
            iconDefaultGhostDangerHoverColor: string;
            iconDefaultGhostDangerPressedColor: string;
            iconDefaultGhostDisabledColor: string;
            iconDefaultGhostFocusedColor: string;
            iconDefaultGhostHoverColor: string;
            iconDefaultGhostPressedColor: string;
            iconDefaultHoverColor: string;
            iconDefaultPressedColor: string;
            iconLinkColor: string;
            iconLinkDangerColor: string;
            iconLinkDangerDisabledColor: string;
            iconLinkDangerFocusedColor: string;
            iconLinkDangerHoverColor: string;
            iconLinkDangerPressedColor: string;
            iconLinkDisabledColor: string;
            iconLinkFocusedColor: string;
            iconLinkHoverColor: string;
            iconLinkPressedColor: string;
            iconPrimaryColor: string;
            iconPrimaryDangerColor: string;
            iconPrimaryDangerDisabledColor: string;
            iconPrimaryDangerFocusedColor: string;
            iconPrimaryDangerHoverColor: string;
            iconPrimaryDangerPressedColor: string;
            iconPrimaryDisabledColor: string;
            iconPrimaryFocusedColor: string;
            iconPrimaryGhostColor: string;
            iconPrimaryGhostDangerColor: string;
            iconPrimaryGhostDangerDisabledColor: string;
            iconPrimaryGhostDangerFocusedColor: string;
            iconPrimaryGhostDangerHoverColor: string;
            iconPrimaryGhostDangerPressedColor: string;
            iconPrimaryGhostDisabledColor: string;
            iconPrimaryGhostFocusedColor: string;
            iconPrimaryGhostHoverColor: string;
            iconPrimaryGhostPressedColor: string;
            iconPrimaryHoverColor: string;
            iconPrimaryPressedColor: string;
            iconSize: number;
            iconSizeLG: number;
            iconSizeSM: number;
            iconTextColor: string;
            iconTextDangerColor: string;
            iconTextDangerDisabledColor: string;
            iconTextDangerFocusedColor: string;
            iconTextDangerHoverColor: string;
            iconTextDangerPressedColor: string;
            iconTextDisabledColor: string;
            iconTextFocusedColor: string;
            iconTextHoverColor: string;
            iconTextPressedColor: string;
            linkBg: string;
            linkBorderColor: string;
            linkColor: string;
            linkDangerBg: string;
            linkDangerBorderColor: string;
            linkDangerColor: string;
            linkDangerDisabledBg: string;
            linkDangerDisabledBorderColor: string;
            linkDangerDisabledColor: string;
            linkDangerFocusedBg: string;
            linkDangerFocusedBorderColor: string;
            linkDangerFocusedColor: string;
            linkDangerHoverBg: string;
            linkDangerHoverBorderColor: string;
            linkDangerHoverColor: string;
            linkDangerPressedBg: string;
            linkDangerPressedBorderColor: string;
            linkDangerPressedColor: string;
            linkDisabledBg: string;
            linkDisabledBorderColor: string;
            linkDisabledColor: string;
            linkFocusedBg: string;
            linkFocusedBorderColor: string;
            linkFocusedColor: string;
            linkHoverBorderColor: string;
            linkHoverColor: string;
            linkPressedBg: string;
            linkPressedBorderColor: string;
            linkPressedColor: string;
            primaryBg: string;
            primaryBorderColor: string;
            primaryDangerBg: string;
            primaryDangerBorderColor: string;
            primaryDangerColor: string;
            primaryDangerDisabledBg: string;
            primaryDangerDisabledBorderColor: string;
            primaryDangerDisabledColor: string;
            primaryDangerFocusedBg: string;
            primaryDangerFocusedBorderColor: string;
            primaryDangerFocusedColor: string;
            primaryDangerHoverBg: string;
            primaryDangerHoverBorderColor: string;
            primaryDangerHoverColor: string;
            primaryDangerPressedBg: string;
            primaryDangerPressedBorderColor: string;
            primaryDangerPressedColor: string;
            primaryDisabledBg: string;
            primaryDisabledBorderColor: string;
            primaryDisabledColor: string;
            primaryFocusedBg: string;
            primaryFocusedBorderColor: string;
            primaryFocusedColor: string;
            primaryGhostBg: string;
            primaryGhostBorderColor: string;
            primaryGhostColor: string;
            primaryGhostDangerBg: string;
            primaryGhostDangerBorderColor: string;
            primaryGhostDangerColor: string;
            primaryGhostDangerDisabledBg: string;
            primaryGhostDangerDisabledBorderColor: string;
            primaryGhostDangerDisabledColor: string;
            primaryGhostDangerFocusedBg: string;
            primaryGhostDangerFocusedBorderColor: string;
            primaryGhostDangerFocusedColor: string;
            primaryGhostDangerHoverBg: string;
            primaryGhostDangerHoverBorderColor: string;
            primaryGhostDangerHoverColor: string;
            primaryGhostDangerPressedBg: string;
            primaryGhostDangerPressedBorderColor: string;
            primaryGhostDangerPressedColor: string;
            primaryGhostDisabledBg: string;
            primaryGhostDisabledBorderColor: string;
            primaryGhostDisabledColor: string;
            primaryGhostFocusedBg: string;
            primaryGhostFocusedBorderColor: string;
            primaryGhostFocusedColor: string;
            primaryGhostHoverBg: string;
            primaryGhostHoverBorderColor: string;
            primaryGhostHoverColor: string;
            primaryGhostPressedBg: string;
            primaryGhostPressedBorderColor: string;
            primaryGhostPressedColor: string;
            primaryHoverBg: string;
            primaryHoverBorderColor: string;
            primaryHoverColor: string;
            primaryPressedBg: string;
            primaryPressedBorderColor: string;
            primaryPressedColor: string;
            textBg: string;
            textBorderColor: string;
            textColor: string;
            textDangerBg: string;
            textDangerBorderColor: string;
            textDangerColor: string;
            textDangerDisabledBg: string;
            textDangerDisabledBorderColor: string;
            textDangerDisabledColor: string;
            textDangerFocusedBg: string;
            textDangerFocusedBorderColor: string;
            textDangerFocusedColor: string;
            textDangerHoverBg: string;
            textDangerHoverBorderColor: string;
            textDangerHoverColor: string;
            textDangerPressedBg: string;
            textDangerPressedBorderColor: string;
            textDangerPressedColor: string;
            textDisabledBg: string;
            textDisabledBorderColor: string;
            textDisabledColor: string;
            textFocusedBg: string;
            textFocusedBorderColor: string;
            textFocusedColor: string;
            textHoverBorderColor: string;
            textHoverColor: string;
            textPressedBg: string;
            textPressedBorderColor: string;
            textPressedColor: string;
        };
        Collapse?: {
            fontSizeIcon: number;
        };
        Select?: {
            customValueDefaultColor: string;
            customValueDescriptionColor: string;
            inputMaxHeight: number;
            inputMaxHeightSM: number;
            inputMaxHeightLG: number;
            menuItemDefaultColor: string;
            menuItemSubtleColor: string;
            menuMaxHeight: number;
            subtextFontSize: number;
            fontSizeIcon: number;
            optionFontSize: number;
            optionFontSizeIcon: number;
            multipleItemMaxWidth: number;
            selectIconSize: number;
            selectBg: string;
            selectIconColor: string;
            selectMenuIconColor: string;
            selectMenuIconActiveColor: string;
            selectMenuIconSize: number;
        };
        TreeSelect?: {
            iconSize: number;
            menuItemPaddingHorizontal: number;
            menuItemPaddingVertical: number;
            subtextFontSize: number;
            menuItemDefaultColor: string;
            menuItemSubtleColor: string;
            menuMaxHeight: number;
            inputMaxHeight: number;
            inputMaxHeightSM: number;
            inputMaxHeightLG: number;
            multipleItemMaxWidth: number;
        };
        Segmented?: {
            fontSize: number;
        };
        Modal?: {
            iconInfoColor: string;
            iconErrorColor: string;
            iconSuccessColor: string;
            iconWarningColor: string;
            iconSize: number;
            closeIconSize: number;
        };
        Notification?: {
            fontSize: number;
        };
        Tabs?: {
            iconSizeSM: number;
            iconSize: number;
            iconSizeLG: number;
        };
        Drawer?: {
            width: number;
            widthLG: number;
            widthSM: number;
            height: number;
            heightSM: number;
            heightLG: number;
            maxWidth: number;
            maxWidthSM: number;
            maxWidthLG: number;
            maxHeight: number;
            maxHeightSM: number;
            maxHeightLG: number;
            minWidth: number;
            minWidthSM: number;
            minWidthLG: number;
            minHeight: number;
            minHeightSM: number;
            minHeightLG: number;
            resizerWidth: number;
            resizerBg: string;
            resizerGutterBg: string;
            resizerGutterHeight: number;
            resizerGutterWidth: number;
            resizerGutterBorderRadius: number;
            fontSizeLG: number;
            iconSize: number;
        };
        Upload?: {
            controlItemBgError: string;
        };
        Tag?: {
            statusDefaultBg: string;
            statusDefaultBorder: string;
            statusDefaultText: string;
            statusErrorBg: string;
            statusErrorBorder: string;
            statusErrorText: string;
            statusProcessingBg: string;
            statusProcessingBorder: string;
            statusProcessingText: string;
            statusWarningBg: string;
            statusWarningBorder: string;
            statusWarningText: string;
            statusSuccessBg: string;
            statusSuccessBorder: string;
            statusSuccessText: string;
            colorfulMagentaText: string;
            colorfulMagentaBg: string;
            colorfulMagentaBorder: string;
            colorfulRedText: string;
            colorfulRedBg: string;
            colorfulRedBorder: string;
            colorfulVolcanoText: string;
            colorfulVolcanoBg: string;
            colorfulVolcanoBorder: string;
            colorfulOrangeText: string;
            colorfulOrangeBg: string;
            colorfulOrangeBorder: string;
            colorfulGoldText: string;
            colorfulGoldBg: string;
            colorfulGoldBorder: string;
            colorfulLimeText: string;
            colorfulLimeBg: string;
            colorfulLimeBorder: string;
            colorfulGreenText: string;
            colorfulGreenBg: string;
            colorfulGreenBorder: string;
            colorfulCyanText: string;
            colorfulCyanBg: string;
            colorfulCyanBorder: string;
            colorfulBlueText: string;
            colorfulBlueBg: string;
            colorfulBlueBorder: string;
            colorfulGeekblueText: string;
            colorfulGeekblueBg: string;
            colorfulGeekblueBorder: string;
            colorfulPurpleText: string;
            colorfulPurpleBg: string;
            colorfulPurpleBorder: string;
            fontSizeIcon: number;
            fontSize: number;
        };
        Transfer?: {
            headerHeight: number;
            headerPaddingVertical: number;
            headerPaddingHorizontal: number;
            headerFontSize: number;
            panelBorderRadius: number;
            maxHeight: number;
            headerBg: string;
            headerBorderColor: string;
            panelBorderColor: string;
            panelLeftMaxWidth: string;
            panelRightMaxWidth: string;
        };
        Filter?: {
            controlMaxWidth: number;
        };
        Form?: {
            colorPrimary: string;
        };
        Pagination?: {
            fontSizeSM: number;
        };
        Popover?: {
            maxWidth: number;
            minWidth: number;
            maxHeight: number;
        };
        Icon?: {
            defaultColor: string;
            primaryColor: string;
        };
        Layout?: {
            headerSplitColor: string;
            panelPadding: number;
            panelMargin: number;
            panelWidth: number;
            panelSplitColor: string;
            fontSize: number;
        };
        Table?: {
            subtextFontSize: number;
            subtextFontWeight: number;
            subtextColor: string;
            columnChooserOptionColor: string;
            columnChooserOptionFontSize: number;
            columnChooserOptionHoverBg: string;
            columnChooserOptionSelectedFontWeight: number;
            columnChooserOptionFontWeight: number;
            columnChooserOptionPaddingHorizontal: number;
            columnChooserOptionPaddingVertical: number;
            columnChooserOptionIconColor: string;
            columnChooserOptionDisabledColor: string;
            columnChooserOptionIconWidth: number;
            columnChooserOptionIconHeight: number;
            columnChooserPaddingVertical: number;
            columnChooserPaddingHorizontal: number;
            columnChooserMaxHeight: number;
        };
        DatePicker?: {
            fontSize: number;
            fontSizeLG: number;
        };
        Tree?: {
            titleHeightLg: number;
        };
    };
} & ThemeConfig;
export type TComponentsThemeConfig = Partial<Record<string, Record<string, string | number>>>;
